#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aqrubik.Web
{
    using System;
    using System.Collections.Generic;    
    using System.Text;
    
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.1.2.0")]
    internal partial class RazorTemplate : RazorTemplateBase
    {
#line hidden

        #line 2 "E:\RobbyData\Project\GitHome\aqrubik\src\Aqrubik.Web\RazorTemplate.cshtml"

    public string Model { get; set; }

        #line default
        #line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");


WriteLiteral("\r\n\r\n<html>\r\n                               <head><title>Welcome to Aqrubik</title" +
"></head>\r\n                               <body>\r\nThis is generated with Razor. C" +
"ihui.\r\n <p> Your submission is ");


            
            #line 10 "E:\RobbyData\Project\GitHome\aqrubik\src\Aqrubik.Web\RazorTemplate.cshtml"
                   Write(Model);

            
            #line default
            #line hidden
WriteLiteral(" </p>\r\n\r\n <a href=\"FDFDF\">dsgfgdgds</a>\r\n </body>\r\n                              " +
"</html>\r\n");


        }
        public string TransformText()
        {
            this.Execute();
            return this.GenerationEnvironment.ToString();
        }
    }
    #region Base class
    public class RazorTemplateBase
    {
        private System.Text.StringBuilder _generatingEnvironment = new System.Text.StringBuilder();
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                return this._generatingEnvironment;
            }
            set
            {
                this._generatingEnvironment = value;
            }
        }
        public virtual void Execute()
        {
        }
        public void WriteLiteral(string textToAppend)
        {
            
        if (String.IsNullOrEmpty(textToAppend)) {
            return; 
        }
        this.GenerationEnvironment.Append(textToAppend);;
        }
        public void Write(object value)
        {

                if ((value == null))
                {
                    return;
                }
                string stringValue;
                System.Type t = value.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null)) 
                {
                    stringValue = value.ToString();
                }
                else {
                    stringValue = ((string)(method.Invoke(value, new object[] { System.Globalization.CultureInfo.InvariantCulture })));
                }
                WriteLiteral(stringValue);
            
        }
    }
    #endregion
}
#pragma warning restore 1591
